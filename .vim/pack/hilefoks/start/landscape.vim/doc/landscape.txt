*landscape.txt*	A colorscheme and syntax for Vim

Version: 0.0
Author: itchyny (https://github.com/itchyny)
License: MIT License
Repository: https://github.com/itchyny/landscape.vim

CONTENTS					*landscape-contents*

Introduction				|landscape-introduction|
Install					|landscape-install|
Variables				|landscape-variables|
Syntax Files				|landscape-syntax|
Vim-Powerline Theme			|landscape-vim-powerline|
Powerline Theme				|landscape-powerline|
Airline Theme				|landscape-airline|

==============================================================================
INTRODUCTION					*landscape-introduction*

The *landscape* plug-in is a colorscheme plug-in for Vim.
It also provides some syntax files.

==============================================================================
INSTALL						*landscape-install*
If you are using |Vundle|, add
>
	Plugin 'itchyny/landscape.vim'
<
to your .vimrc. And then execute |:PluginInstall|.

If you are using |neobundle|, add
>
	NeoBundle 'itchyny/landscape.vim'
<
to your .vimrc. Note that write this configuration before any of unite.vim,
vimfiler.vim and vimshell.vim.

Otherwise, download scripts to corresponding directory under $VIM.
For example, place plugin/landscape.vim at $VIM/plugin/.

==============================================================================
VARIABLES					*landscape-variables*

g:landscape_highlight_todo			*g:landscape_highlight_todo*
		If this variable is 1, the words TODO, todo and Todo are
		colored anywhere. The default value is 0.

g:landscape_highlight_full_space		*g:landscape_highlight_full_space*
		If this variable is 1, full-size spaces are colored anywhere.
		The default value is 0.

g:landscape_syntax_vimfiler			*g:landscape_syntax_vimfiler*
g:landscape_syntax_vimshell			*g:landscape_syntax_vimshell*
g:landscape_syntax_unite			*g:landscape_syntax_unite*
g:landscape_syntax_quickrun			*g:landscape_syntax_quickrun*
		If these variable is set to 0, corresponding syntax file of
		|landscape| will not be loaded. In default, none of these
		variables is set.

==============================================================================
SYNTAX FILES					*landscape-syntax*

This plug-in contains following syntax files.

	|vimfiler|.vim (https://github.com/Shougo/vimfiler)
	|vimshell|.vim (https://github.com/Shougo/vimshell)
	|unite|.vim (https://github.com/Shougo/unite.vim)
	|quickrun|.vim (https://github.com/thinca/vim-quickrun)

If you do not want to disable these syntax files, add following configuration
to .vimrc.
>
	let g:landscape_syntax_vimfiler = 0
	let g:landscape_syntax_vimshell = 0
	let g:landscape_syntax_unite = 0
	let g:landscape_syntax_quickrun = 0
<
I highly recommend following configuration for |unite.vim|.
>
	let g:unite_cursor_line_highlight = 'CursorLine'
<
==============================================================================
VIM POWERLINE THEME				*landscape-vim-powerline*
This plug-in contains a theme and colorscheme for |vim-powerline|. Note that it is
for vim-powerline (https://github.com/Lokaltog/vim-powerline), not for
Powerline (https://github.com/Lokaltog/powerline). You can use the theme and
colorscheme by the following configurations.
>
	let g:Powerline_theme = 'landscape'
	let g:Powerline_colorscheme = 'landscape'
<
==============================================================================
POWERLINE THEME					*landscape-powerline*
This plug-in contains a theme and colorscheme for |powerline|.
(https://github.com/Lokaltog/powerline). After copying the
powerline/colorschemes/vim/landscape.json to the appropreate directory,
you can use the landscape theme by the following configuration.
>
	{
	"ext": {
		"vim": {
			"colorscheme": "landscape", ...
<
==============================================================================
AIRLINE THEME					*landscape-airline*
This plug-in also contains a theme for |airline|
(https://github.com/bling/vim-airline). You can use the theme by the following
setting.
>
	let g:airline_theme = 'landscape'
<

Also, the following settings will be nice.
>
	let g:airline#extensions#hunks#non_zero_only = 1
	let g:airline#extensions#whitespace#enabled = 0
	let g:airline#extensions#branch#enabled = 0
	let g:airline#extensions#readonly#enabled = 0
	let g:airline_section_b =
	    \ '%{airline#extensions#branch#get_head()}' .
	    \ '%{""!=airline#extensions#branch#get_head()?("  " . g:airline_left_alt_sep . " "):""}' .
	    \ '%{airline#extensions#readonly#get_mark()}' .
	    \ '%t%( %M%)'
	let g:airline_section_c = ''
	let s:sep = " %{get(g:, 'airline_right_alt_sep', '')} "
	let g:airline_section_x =
	    \ '%{strlen(&fileformat)?&fileformat:""}'.s:sep.
	    \ '%{strlen(&fenc)?&fenc:&enc}'.s:sep.
	    \ '%{strlen(&filetype)?&filetype:"no ft"}'
	let g:airline_section_y = '%3p%%'
	let g:airline_section_z = get(g:, 'airline_linecolumn_prefix', '').'%3l:%-2v'
<

==============================================================================
vim:tw=78:sw=4:ts=8:ft=help:norl:noet:
